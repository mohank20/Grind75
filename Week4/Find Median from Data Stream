class MedianFinder {
public: priority_queue<long> small,large;
    MedianFinder() {
        
    }
    
    void addNum(int num) {
        if(small.size()==0) small.push(num);
       else if(small.size()<=large.size()){
           if(num<=-large.top()) small.push(num);
           else {
               small.push(-large.top());large.pop();large.push(-num);
           }
       }
       else {
           if(num>=small.top()) large.push(-num);
           else{large.push(-small.top());small.pop();small.push(num);}
       }
    }
    
    double findMedian() {
        if(small.size()==large.size()) return (small.top()-large.top())/2.0;
        else return small.top();       
    }
};

/**
 * Your MedianFinder object will be instantiated and called as such:
 * MedianFinder* obj = new MedianFinder();
 * obj->addNum(num);
 * double param_2 = obj->findMedian();
 */
