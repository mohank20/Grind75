class Solution {
public:  
    class Compare{
        public: bool operator()(pair<string,int> a,pair<string,int> b){
            if(a.second==b.second) return a.first>b.first;
            return a.second<b.second;
        }
    };
    vector<string> topKFrequent(vector<string>& words, int k) {
        unordered_map<string,int> mp;
        for(auto &x : words){
            mp[x]++;
        } vector<string> ans;
        priority_queue<pair<string,int>,vector<pair<string,int>>,Compare> pq;
        for(auto &x : mp){
            pq.push({x.first,x.second});
        }
        for(int i=0;i<k;i++) {
            ans.push_back(pq.top().first); pq.pop();
        }  
        return ans;
    }
};
