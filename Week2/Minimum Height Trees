class Solution {
public:
    vector<int> findMinHeightTrees(int n, vector<vector<int>>& edges) {
        if(n==1) return {0};
        vector<int> res,degree(n,0);
        queue<int> q;
        vector<vector<int>> adj(n);
        for(int i=0;i<edges.size();i++){
                adj[edges[i][0]].push_back(edges[i][1]);
                adj[edges[i][1]].push_back(edges[i][0]);
                degree[edges[i][0]]++;
                degree[edges[i][1]]++;
        }
        for(int i=0;i<n;i++) if(degree[i]==1) q.push(i);
        while(!q.empty()){
            res.clear(); int size=q.size();
            while(size--){
                int x = q.front(); q.pop(); degree[x]--; res.push_back(x);
                for(auto y : adj[x]) {
                    degree[y]--; if(degree[y]==1) q.push(y);
                }
            }
        } 
        return res;       
    }
};
