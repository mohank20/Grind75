class RandomizedSet {
private: vector<int> v; unordered_map<int,int> mp;
public:
    RandomizedSet() {
        
    }
    
    bool insert(int val) {
        if(mp.count(val)) return false;
        mp[val]=v.size();
        v.emplace_back(val);//much faster
        return true;
    }
    
    bool remove(int val) {
        if(!mp.count(val)) return false; //mp.count->O(1), mp.find()->O(n)
        int temp=v.back();
        v[mp[val]]=temp;
        mp[temp]=mp[val];
        v.pop_back();
        mp.erase(val); 
        return true;       
    }
    
    int getRandom() {
        return v[rand()%v.size()];        
    }
};

/**
 * Your RandomizedSet object will be instantiated and called as such:
 * RandomizedSet* obj = new RandomizedSet();
 * bool param_1 = obj->insert(val);
 * bool param_2 = obj->remove(val);
 * int param_3 = obj->getRandom();
 */
