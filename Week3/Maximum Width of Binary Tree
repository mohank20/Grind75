/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public: 
    int widthOfBinaryTree(TreeNode* root) {
        unsigned int maxi=0;
        if(!root) return 0;
        queue<pair<TreeNode*,unsigned int>> q;
        q.push({root,1});
        while(!q.empty()){
            unsigned int l=q.front().second, len=q.size();
            while(len--){
                auto temp=q.front(); q.pop(); maxi=max(maxi,temp.second-l+1);
                if(temp.first->left) q.push({temp.first->left,2*temp.second});
                if(temp.first->right) q.push({temp.first->right,2*temp.second+1});
            }
            
        }  
        return maxi;      
    }
};
