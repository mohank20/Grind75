/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void helper(TreeNode* root, int targetSum, int curSum, vector<int> &stack, vector<vector<int>> & ans){
        if(!root) return ;
        stack.push_back(root->val); curSum+=root->val;
        if(!root->left && !root->right){
        if(curSum==targetSum) ans.push_back(stack); 
        }
        if(root->left) helper(root->left,targetSum,curSum,stack,ans);
        if(root->right) helper(root->right,targetSum,curSum,stack,ans);
        stack.pop_back();
    }
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        vector<vector<int>> ans; vector<int> stack;
        helper(root,targetSum,0,stack,ans);
        return ans;
    }
};
