/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* A) {
        ListNode *slow=A,*fast=A,*head=A;
        while(fast && fast->next){
            slow=slow->next;
            fast=fast->next->next;
        }
        if(fast && !fast->next) slow=slow->next;
        ListNode *prev=NULL,*cur=slow,*after=NULL;
        while(cur){
            after=cur->next;
            cur->next=prev;
            prev=cur;
            cur=after;
        }
        slow=prev;
        while(slow){
            if(slow->val!=head->val) return false;
            slow=slow->next;
            head=head->next;
        }
        return true;
    }
};
