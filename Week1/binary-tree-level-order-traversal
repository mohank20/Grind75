/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:


vector<vector<int>> levelOrder(TreeNode *root)
{
    if(!root)
        return {}; 
    // apply bfs.
    queue<TreeNode *> pq;
    vector<vector<int>> order = {{root->val}};
    pq.push(root);
    int idx = 0;
    while (pq.size())
    {
        int sz = pq.size();
        order.push_back({});
        idx++;
        while (sz--)
        {
            auto top = pq.front();
            pq.pop();
            if (top->left)
            {
                order[idx].push_back(top->left->val);
                pq.push(top->left);
            }
            if (top->right)
            {
                order[idx].push_back(top->right->val);
                pq.push(top->right);
            }
        }
    }
    order.pop_back();
    return order;
}

};
